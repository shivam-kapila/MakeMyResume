{"ast":null,"code":"var _jsxFileName = \"/home/shivamkapila/Documents/ResumeCode/resume-builder/src/UI/input/input.js\";\nimport React from 'react';\nimport \"./input.css\";\n\nvar input = function input(props) {\n  var inputElement = null;\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, props.elementConfig.options.map(function (option) {\n        return React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, option.displayValue);\n      }));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(React.Fragment, null, inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/home/shivamkapila/Documents/ResumeCode/resume-builder/src/UI/input/input.js"],"names":["React","input","props","inputElement","elementType","elementConfig","value","changed","options","map","option","displayValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,MAAIC,YAAY,GAAG,IAAnB;;AACA,UAAQD,KAAK,CAACE,WAAd;AACI,SAAM,OAAN;AACID,MAAAA,YAAY,GAAE,+CACED,KAAK,CAACG,aADR;AAEF,QAAA,KAAK,EAAEH,KAAK,CAACI,KAFX;AAGF,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAd;AAIA;;AACJ,SAAM,UAAN;AACIJ,MAAAA,YAAY,GAAC,kDACGD,KAAK,CAACG,aADT;AAED,QAAA,KAAK,EAAEH,KAAK,CAACI,KAFZ;AAGD,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;AAIA;;AACJ,SAAM,QAAN;AACAJ,MAAAA,YAAY,GAAC;AACD,QAAA,KAAK,EAAED,KAAK,CAACI,KADZ;AAED,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGAL,KAAK,CAACG,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgC,UAAAC,MAAM;AAAA,eACnC;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACJ,KAApB;AAA2B,UAAA,KAAK,EAAEI,MAAM,CAACJ,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKI,MAAM,CAACC,YADZ,CADmC;AAAA,OAAtC,CAHA,CAAb;AASA;;AACA;AACIR,MAAAA,YAAY,GAAC,+CACGD,KAAK,CAACG,aADT;AAED,QAAA,KAAK,EAAEH,KAAK,CAACI,KAFZ;AAGD,QAAA,QAAQ,EAAEJ,KAAK,CAACK,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;AAzBR;;AA8BA,SACI,0CACKJ,YADL,CADJ;AAKH,CArCD;;AAuCA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport \"./input.css\";\nconst input = (props) => {\n    let inputElement = null;\n    switch (props.elementType) {\n        case ('input'):\n            inputElement= <input\n                        {...props.elementConfig}\n                        value={props.value}\n                        onChange={props.changed} />\n            break;\n        case ('textarea'):\n            inputElement=<textarea\n                        {...props.elementConfig}\n                        value={props.value}\n                        onChange={props.changed} />\n            break;\n        case ('select'):\n        inputElement=<select\n                    value={props.value}\n                    onChange={props.changed} >\n                    {props.elementConfig.options.map(option=>(\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                    </select>\n        break;\n        default:\n            inputElement=<input\n                        {...props.elementConfig}\n                        value={props.value}\n                        onChange={props.changed} />\n    }\n    return (\n        <>\n            {inputElement}\n        </>\n    );\n}\n\nexport default input;"]},"metadata":{},"sourceType":"module"}